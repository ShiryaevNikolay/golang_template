# Имя нашего pipline
name: CI/CD

# Прописываем, когда он выполнятеся
on: 
  # т.е. будет выпоняться при пуше
  push:
    # ... в ветку main
    branches:
      - main
      - master

# Описывает, какие будут выполняться действия
jobs:
  lint:
    # Имя, которое будет видно нам
    name: Run linter
    # Описывает, на каком дистрибутиве он будет выполняться в pipline
    runs-on: ubuntu-latest
    # Описывает шаги, какие нужно выполнить
    steps:
      # Это стандартный экшен гитаба, который берет наш репозиторий
      # и клонирует его в локальную папку нашего pipline
      - uses: actions/checkout@v2
      # 
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2

  deploy:
    name: Deploy on Heroku
    runs-on: ubuntu-latest
    # Указываем, что обязательно должен выполниться lint
    needs: 
      - lint
    steps:
      - uses: actions/checkout@v2
      # Шаг: залогиниться в сервисе Heroku Container registry
      - name: Login to Heroku Container registry
        # Добавляем в окружение данные из секретов
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:Login
      # Шаг: build и push
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        # Пушим контейнер registry
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web
      # Шаг: релизит контейнер registry
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
